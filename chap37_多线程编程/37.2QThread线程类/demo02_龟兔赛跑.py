# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'demo02_龟兔赛跑.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import *

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(593, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(60, 60, 151, 51))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(410, 60, 151, 51))
        self.label_2.setObjectName("label_2")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(10, 120, 241, 311))
        self.textEdit.setObjectName("textEdit")
        self.textEdit_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_2.setGeometry(QtCore.QRect(340, 120, 241, 311))
        self.textEdit_2.setObjectName("textEdit_2")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(240, 470, 111, 41))
        self.pushButton.setObjectName("pushButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 593, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        #创建兔子线程对象
        self.r = Rabbit()
        #将线程的信号与槽函数进行连接
        self.r.sinOut.connect(self.rabbit)
        #创建乌龟线程对象
        self.t = Tortoise()
        #将线程的信号与槽函数进行连接
        self.t.sinOut.connect(self.tortoise)
        #开始两个线程
        self.pushButton.clicked.connect(self.start)

    def start(self):
        self.r.start()
        self.t.start()

    #显示兔子的跑步距离
    def rabbit(self, str):
        self.textEdit.setPlainText(self.textEdit.toPlainText()+str)

    #显示乌龟的跑步距离
    def tortoise(self, str):
        self.textEdit_2.setPlainText(self.textEdit_2.toPlainText()+str)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "兔子的比赛纪录"))
        self.label_2.setText(_translate("MainWindow", "乌龟的比赛纪录"))
        self.pushButton.setText(_translate("MainWindow", "开始"))

#创建兔子线程类
class Rabbit(QThread):
    #自定义信号，用来发射兔子比赛状态
    sinOut = pyqtSignal(str)
    def __init__(self):
        super(Rabbit, self).__init__()
    #重写run()方法
    def run(self):
        for i in range(1,11):
            #循环10次模拟赛跑的过程
            #每次循环休眠0.1秒
            QThread.msleep(100)
            #显示兔子的跑步距离
            self.sinOut.emit('\n 兔子跑了'+str(i*10)+'米')
            if i==9:
                #当跑了90米时开始睡觉
                self.sinOut.emit('\n 兔子睡着了')
                QThread.sleep(5)
            if i==10:
                #当跑了100米时结束比赛
                self.sinOut.emit('\n 兔子到达终点，比赛结束')

#创建乌龟线程类
class Tortoise(QThread):
    sinOut = pyqtSignal(str)
    def __init__(self):
        super(Tortoise, self).__init__()
    #重写run()方法
    def run(self):
        for i in range(1,11):
            #线程休眠0.5秒，模拟乌龟在跑步
            QThread.msleep(500)
            self.sinOut.emit('\n 乌龟跑了'+str(i*10)+'米')
            if i==10:
                self.sinOut.emit('\n 乌龟到达终点，比赛结束')

import sys

if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()  # 创建窗口对象
    ui = Ui_MainWindow()  # 创建PyQt设计的窗体对象
    ui.setupUi(MainWindow)  # 调用PyQt窗体的方法对窗体对象进行初始化设置
    MainWindow.show()  # 显示窗体
    sys.exit(app.exec_())  # 程序关闭时退出进程