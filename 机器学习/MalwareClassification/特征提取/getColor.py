import os
import numpy
from collections import *
import pandas as pd
import binascii


def getMatrixfrom_bin(filename, width = 512, oneRow = False):
    with open(filename, 'rb') as f:
        content = f.read()
    hexst = binascii.hexlify(content)
    fh = numpy.array([int(hexst[i:i+2],16) for i in range(0, len(hexst), 2)])
    if oneRow is False:
        rn = len(fh)/width
        fh = numpy.reshape(fh[:rn*width],(-1,width))
    fh = numpy.uint8(fh)
    return fh

def getMatrixfrom_asm(filename, startindex = 0, pixnum = 5000):
    """
    从二进制文件中读取数据，并将其转换为NumPy数组
    :param filename: asm文件路径
    :param startindex: 使用给定的startindex参数，将文件指针移动到指定的起始位置。默认为0
    :param pixnum: 从文件中读取指定数量的字节数据（由pixnum参数指定）默认为5000
    :return:返回生成的NumPy数组，其中包含了从二进制文件中读取的数据。
    """
    with open(filename, 'rb') as f:
        f.seek(startindex, 0)
        content = f.read(pixnum)
    hexst = binascii.hexlify(content)   #将读取的字节数据转换为十六进制字符串
    fh = numpy.array([int(hexst[i:i+2],16) for i in range(0, len(hexst), 2)])   #将十六进制字符串转换为整数数组，其中每个字节对应一个整数值
    fh = numpy.uint8(fh)
    return fh

def getMatrixfrom_hex(filename, width):
    hexar = []
    with open(filename,'rb') as f:
        for line in f:
            hexar.extend(int(el,16) for el in line.split()[1:] if el != "??")
    rn = len(hexar)/width
    fh = numpy.reshape(hexar[:rn*width],(-1,width))
    fh = numpy.uint8(fh)
    return fh

def read_hexbytes(filename):
    hexar = []
    with open(filename,'rb') as f:
        for line in f:
            hexar.extend(int(el,16) for el in line.split()[1:] if el != "??")
    rn = len(hexar)/256
    fh = numpy.reshape(hexar[:rn*256],(-1,256))
    fh = numpy.uint8(fh)
    return fh

basepath = "H:/恶意代码数据/train/"
mapimg = defaultdict(list)
subtrain = pd.read_csv('../CSV/subtrainLabels.csv')
i = 0
for sid in subtrain.Id:
    i += 1
    print("dealing with {0}th file...".format(str(i)))
    filename = basepath + sid + ".asm"
    im = getMatrixfrom_asm(filename, startindex = 0, pixnum = 1500)
    mapimg[sid] = im
    print(mapimg)

dataframelist = []
for sid,imf in mapimg.items():
    standard = {}
    standard["Id"] = sid
    for index,value in enumerate(imf):
        colName = "pix{0}".format(str(index))
        standard[colName] = value
    dataframelist.append(standard)

df = pd.DataFrame(dataframelist)
df.to_csv("../CSV/Allimgfeature.csv",index=False)