# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'demo01_选择并显示图片文件.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(751, 500)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(0, 0, 121, 61))
        self.pushButton.setObjectName("pushButton")
        self.listWidget = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget.setGeometry(QtCore.QRect(0, 60, 751, 381))
        self.listWidget.setObjectName("listWidget")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 751, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        # 为按钮的clicked信号绑定槽函数
        self.pushButton.clicked.connect(self.bindList)

    def bindList(self):
        from PyQt5.QtWidgets import QFileDialog
        # 创建文件对话框
        dir = QFileDialog()
        # 设置多选
        dir.setFileMode(QFileDialog.ExistingFiles)
        # 设置初始路径为C盘
        dir.setDirectory("C:/")
        # 设置只显示图片文件
        dir.setNameFilter("Images (*.png *.xpm *.jpg *.bmp *.gif *.jpeg *.ico)")
        # 判断是否选择了文件
        if dir.exec():
            # 将选择的文件显示在列表中
            self.listWidget.addItems(dir.selectedFiles())

    #使用getOpenFileNames()方法获取多个打开文件的文件名
    def bindList2(self):
        from PyQt5.QtWidgets import QFileDialog
        files,filetype=QFileDialog.getOpenFileNames(None,"打开文件","C:/","Images (*.png *.xpm *.jpg *.bmp *.gif *.jpeg *.ico)")
        self.listWidget.addItems(files)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "选择文件"))


import sys

if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()  # 创建窗口对象
    ui = Ui_MainWindow()  # 创建PyQt设计的窗体对象
    ui.setupUi(MainWindow)  # 调用PyQt窗体的方法对窗体对象进行初始化设置
    MainWindow.show()  # 显示窗体
    sys.exit(app.exec_())  # 程序关闭时退出进程
