# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'demo01_子窗口的动态添加及排列.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(690, 352)
        # 设置窗口标题
        MainWindow.setWindowTitle("MDI 窗口")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        # 创建MDI窗口区域
        self.mdiArea = QtWidgets.QMdiArea(self.centralwidget)
        self.mdiArea.setGeometry(QtCore.QRect(0, 0, 691, 301))
        self.mdiArea.setObjectName("mdiArea")
        MainWindow.setCentralWidget(self.centralwidget)
        # 创建菜单栏
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 690, 26))
        self.menubar.setObjectName("menubar")
        # 设置主菜单
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        # 设置新建菜单项
        self.action = QtWidgets.QAction(MainWindow)
        self.action.setObjectName("action")
        # 设置平铺菜单项
        self.action1 = QtWidgets.QAction(MainWindow)
        self.action1.setObjectName("action1")
        # 设置级联菜单项
        self.action2 = QtWidgets.QAction(MainWindow)
        self.action2.setObjectName("action2")
        # 将新建的三个菜单添加到主菜单中
        self.menu.addAction(self.action)
        self.menu.addAction(self.action1)
        self.menu.addAction(self.action2)
        self.menubar.addAction(self.menu.menuAction())

        # 将设置完成的主菜单添加到菜单栏中
        self.menubar.addAction(self.menu.menuAction())
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        # 为菜单项关联信号
        self.menubar.triggered[QAction].connect(self.actions)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    # 定义变量，用来新建的子窗口个数
    count = 0

    # 自定义槽函数，根据选择的菜单执行相应操作
    def actions(self, m):
        if m.text() == "新建":
            # 创建子窗口对象
            sub = QMdiSubWindow()
            # 记录子窗口个数
            self.count = self.count + 1
            # 设置子窗口标题
            sub.setWindowTitle("子窗口" + str(self.count))
            # 在子窗口添加一个标签，并设置文本
            sub.setWidget(QLabel(f"这是第{self.count}个子窗口"))
            # 将新建的子窗口添加到MDI区域
            self.mdiArea.addSubWindow(sub)
            # 显示子窗口
            sub.show()
        elif m.text() == "平铺显示":
            # 对子窗口平铺显示
            self.mdiArea.tileSubWindows()
        elif m.text() == "级联显示":
            # 对子窗口级联显示
            self.mdiArea.cascadeSubWindows()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        self.menu.setTitle(_translate("MainWindow", "子窗口操作"))
        self.action.setText(_translate("MainWindow", "新建"))
        self.action1.setText(_translate("MainWindow", "平铺显示"))
        self.action2.setText(_translate("MainWindow", "级联显示"))


import sys

if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()  # 创建窗口对象
    ui = Ui_MainWindow()  # 创建PyQt设计的窗体对象
    ui.setupUi(MainWindow)  # 调用PyQt窗体的方法对窗体对象进行初始化设置
    MainWindow.show()  # 显示窗体
    sys.exit(app.exec_())  # 程序关闭时退出进程
